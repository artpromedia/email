version: "3.8"

networks:
  ceerion-mail:
    driver: bridge
    ipam:
      config:
        - subnet: 172.32.0.0/16

volumes:
  postgres_mail_data:
    driver: local
  redis_mail_data:
    driver: local
  postfix_data:
    driver: local
  dovecot_data:
    driver: local
  rspamd_data:
    driver: local
  clamav_data:
    driver: local
  backup_data:
    driver: local
  ssl_certs:
    driver: local
  mail_storage:
    driver: local

services:
  # PostgreSQL Database for mail metadata
  postgres-mail:
    image: postgres:16-alpine
    container_name: ceerion-postgres-mail
    environment:
      POSTGRES_DB: ceerion_mail
      POSTGRES_USER: ceerion
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ceerion_secure_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_mail_data:/var/lib/postgresql/data
      - ./docker/postgres/init-mail.sql:/docker-entrypoint-initdb.d/init-mail.sql:ro
      - backup_data:/backup
    ports:
      - "5434:5432"
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.10
    restart: unless-stopped
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB
      -c log_statement=all
      -c log_min_duration_statement=1000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ceerion -d ceerion_mail"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and queuing
  redis-mail:
    image: redis:7-alpine
    container_name: ceerion-redis-mail
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-ceerion_redis_2024}
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_mail_data:/data
    ports:
      - "6381:6379"
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.11
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ClamAV Antivirus Scanner
  clamav:
    image: clamav/clamav:latest
    container_name: ceerion-clamav
    environment:
      CLAMAV_NO_FRESHCLAMD: false
      CLAMAV_NO_CLAMD: false
    volumes:
      - clamav_data:/var/lib/clamav
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.12
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/local/bin/clamd", "--ping"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 300s

  # Rspamd Anti-spam and Filtering
  rspamd:
    image: rspamd/rspamd:latest
    container_name: ceerion-rspamd
    volumes:
      - rspamd_data:/var/lib/rspamd
      - ./docker/rspamd/local.d:/etc/rspamd/local.d:ro
      - ./docker/rspamd/override.d:/etc/rspamd/override.d:ro
    ports:
      - "11334:11334" # Web interface
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.13
    restart: unless-stopped
    depends_on:
      - redis-mail
    healthcheck:
      test: ["CMD", "rspamc", "stat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Postfix SMTP Server
  postfix:
    image: ceerion/postfix:latest
    build:
      context: ./docker/postfix
      dockerfile: Dockerfile
    container_name: ceerion-postfix
    hostname: mail.ceerion.com
    environment:
      MAIL_DOMAIN: ${MAIL_DOMAIN:-ceerion.com}
      POSTGRES_HOST: postgres-mail
      POSTGRES_DB: ceerion_mail
      POSTGRES_USER: ceerion
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ceerion_secure_2024}
      DKIM_SELECTOR: ceerion
      REDIS_HOST: redis-mail
      REDIS_PASSWORD: ${REDIS_PASSWORD:-ceerion_redis_2024}
    volumes:
      - postfix_data:/var/spool/postfix
      - ssl_certs:/etc/ssl/certs
      - ./docker/postfix/config:/etc/postfix/config:ro
      - ./docker/dkim:/etc/postfix/dkim:ro
    ports:
      - "25:25" # SMTP
      - "465:465" # SMTPS
      - "587:587" # Submission
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.20
    restart: unless-stopped
    depends_on:
      - postgres-mail
      - redis-mail
      - rspamd
      - clamav
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "postfix", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Dovecot IMAP/LMTP/JMAP Server
  dovecot:
    image: ceerion/dovecot:latest
    build:
      context: ./docker/dovecot
      dockerfile: Dockerfile
    container_name: ceerion-dovecot
    hostname: mail.ceerion.com
    environment:
      MAIL_DOMAIN: ${MAIL_DOMAIN:-ceerion.com}
      POSTGRES_HOST: postgres-mail
      POSTGRES_DB: ceerion_mail
      POSTGRES_USER: ceerion
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ceerion_secure_2024}
    volumes:
      - dovecot_data:/var/lib/dovecot
      - mail_storage:/var/mail
      - ssl_certs:/etc/ssl/certs
      - ./docker/dovecot/config:/etc/dovecot/config:ro
    ports:
      - "143:143" # IMAP
      - "993:993" # IMAPS
      - "24:24" # LMTP
      - "8080:8080" # JMAP
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.21
    restart: unless-stopped
    depends_on:
      - postgres-mail
      - postfix
    cap_add:
      - NET_BIND_SERVICE
    healthcheck:
      test: ["CMD", "doveadm", "service", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx for MTA-STS and TLS-RPT
  nginx-mail:
    image: nginx:alpine
    container_name: ceerion-nginx-mail
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/mta-sts:/var/www/mta-sts:ro
      - ssl_certs:/etc/ssl/certs:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.22
    restart: unless-stopped
    depends_on:
      - postfix
      - dovecot
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Encrypted Backup Service
  backup-service:
    image: ceerion/backup:latest
    build:
      context: ./docker/backup
      dockerfile: Dockerfile
    container_name: ceerion-backup
    environment:
      POSTGRES_HOST: postgres-mail
      POSTGRES_DB: ceerion_mail
      POSTGRES_USER: ceerion
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ceerion_secure_2024}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION:-us-east-1}
      S3_BUCKET: ${S3_BACKUP_BUCKET:-ceerion-mail-backups}
      KMS_KEY_ID: ${KMS_KEY_ID}
      BACKUP_ENCRYPTION_KEY: ${BACKUP_ENCRYPTION_KEY}
    volumes:
      - backup_data:/backup
      - postgres_mail_data:/postgres_data:ro
      - mail_storage:/mail_storage:ro
      - ./docker/backup/scripts:/backup/scripts:ro
    networks:
      ceerion-mail:
        ipv4_address: 172.32.0.30
    restart: unless-stopped
    depends_on:
      - postgres-mail
    # Run backup at 2 AM daily
    command: >
      sh -c "echo '0 2 * * * /backup/scripts/backup.sh' | crontab - && crond -f"
